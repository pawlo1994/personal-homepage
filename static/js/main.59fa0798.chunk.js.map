{"version":3,"sources":["features/author/author.jpg","features/author/DarkModeSwitch/darkThemeOff.svg","features/author/DarkModeSwitch/darkThemeOn.svg","themeSlice.js","features/author/DarkModeSwitch/styled.js","features/author/DarkModeSwitch/index.js","features/author/Header/mail.svg","features/author/Header/styled.js","features/author/Header/index.js","features/author/styled.js","features/author/index.js","globalStyle.js","theme.js","common/Wrapper.js","common/Section/styled.js","common/Section/index.js","features/author/skillsAndToLearn.js","App.js","reportWebVitals.js","store.js","index.js"],"names":["themeSlice","createSlice","name","initialState","darkMode","reducers","toggleDarkMode","state","actions","selectDarkMode","theme","DarkModeSwitchLabel","styled","span","color","slateGray","breakpoint","mobileMax","DarkModeSwitchWrapper","div","StyledDarkModeSwitch","button","DarkModeSwitch","dispatch","useDispatch","useSelector","onClick","src","darkThemeOn","darkThemeOff","alt","StyledHeader","header","Subheader","p","HeaderTitle","h1","mineShaft","Description","ContactButton","a","scienceBlue","buttonTextColor","Header","href","rel","mail","AuthorWrapper","Image","img","Author","authorImage","GlobalStyle","createGlobalStyle","whiteLilac","light","white","headerTextColor","headerUnderlineColor","listItemColor","markerColor","dark","Wrapper","StyledSection","section","SectionHeader","h2","SectionList","ul","SectionListItem","li","Section","listContent","map","listItem","id","skillset","toLearn","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","themeReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.59fa0798.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/author.9cce596d.jpg\";","export default __webpack_public_path__ + \"static/media/darkThemeOff.8fa7bb86.svg\";","export default __webpack_public_path__ + \"static/media/darkThemeOn.165bbd71.svg\";","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst themeSlice = createSlice({\r\n    name: \"theme\",\r\n    initialState: {\r\n        darkMode: false,\r\n    },\r\n    reducers: {\r\n        toggleDarkMode: state => {\r\n            state.darkMode = !state.darkMode;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { toggleDarkMode } = themeSlice.actions;\r\nexport const selectDarkMode = state => state.theme.darkMode;\r\nexport default themeSlice.reducer;","import styled from \"styled-components\";\r\n\r\nexport const DarkModeSwitchLabel = styled.span`\r\n    color: ${({ theme }) => theme.color.slateGray};\r\n    font-size: 12px;\r\n    text-transform: uppercase;\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoint.mobileMax})\r\n    {\r\n        display: none;\r\n    }\r\n`;\r\n\r\nexport const DarkModeSwitchWrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n`\r\n\r\nexport const StyledDarkModeSwitch = styled.button`\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: unset;\r\n    border: none;\r\n    width: 47,06px;\r\n    height: 25,07px;\r\n    right: 0;\r\n    top: 0;\r\n\r\n    &:hover{\r\n        cursor: pointer;\r\n    }\r\n    `;","import { useSelector, useDispatch } from \"react-redux\";\r\nimport darkThemeOff from \"./darkThemeOff.svg\";\r\nimport darkThemeOn from \"./darkThemeOn.svg\";\r\nimport { selectDarkMode } from \"../../../themeSlice\";\r\nimport { DarkModeSwitchLabel, DarkModeSwitchWrapper, StyledDarkModeSwitch } from \"./styled\";\r\nimport { toggleDarkMode } from \"../../../themeSlice\";\r\n\r\nexport const DarkModeSwitch = () => {\r\n    const dispatch = useDispatch();\r\n    const darkMode = useSelector(selectDarkMode);\r\n    return (\r\n        <DarkModeSwitchWrapper>\r\n            <DarkModeSwitchLabel>dark mode {darkMode === true ? \"on\" : \"off\"}</DarkModeSwitchLabel>\r\n            <StyledDarkModeSwitch onClick={() => dispatch(toggleDarkMode())}>\r\n                <img src={darkMode ? darkThemeOn : darkThemeOff} alt=\"switch theme\" />\r\n            </StyledDarkModeSwitch>\r\n        </DarkModeSwitchWrapper>\r\n    );\r\n};","export default __webpack_public_path__ + \"static/media/mail.b9d89d94.svg\";","import styled from \"styled-components\";\r\n\r\nexport const StyledHeader = styled.header`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const Subheader = styled.p`\r\n    text-transform: uppercase;\r\n    font-size: 12px;\r\n    color: ${({ theme }) => theme.color.slateGray};\r\n    line-height: 15.6px;\r\n`\r\nexport const HeaderTitle = styled.h1`\r\n    color: ${({ theme }) => theme.color.mineShaft};\r\n    font-size: 38px;\r\n    line-height: 46px;\r\n    letter-spacing: 0.05em;\r\n    margin: 0 0 35px;\r\n\r\n    @media(max-width:767px){\r\n        font-size: 22px;\r\n        margin: 0 0 16px;\r\n    }\r\n`;\r\n\r\nexport const Description = styled.p`\r\n    color: ${({ theme }) => theme.color.slateGray};\r\n    line-height: 28px;\r\n    letter-spacing: 0.05em;\r\n    margin: 0 0 32px;\r\n\r\n    @media(max-width: 767px){\r\n        font-size: 17px;\r\n    }\r\n`;\r\n\r\nexport const ContactButton = styled.a`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n    font-weight: 600;\r\n    letter-spacing: 0.05em;\r\n    padding: 12px 16px;\r\n    border: 1px solid rgba(209, 213, 218, 0.3);\r\n    border-radius: 4px;\r\n    text-decoration: none;\r\n    background-color: ${({ theme }) => theme.color.scienceBlue};\r\n    color: ${({ theme }) => theme.color.buttonTextColor};\r\n    width: 154px;\r\n    height: 49px;\r\n    transition: 0.3s;\r\n\r\n    @media(max-width: 767px){\r\n        width: 138px;\r\n        height: 46px;\r\n    }\r\n\r\n    &:focus{\r\n        outline: none;\r\n        box-shadow: 2px -2px 0px #8CC2FF, -2px 2px 0px #8CC2FF, 2px 2px 0px #8CC2FF, -2px -2px 0px #8CC2FF;\r\n    }\r\n\r\n    &:hover{\r\n        filter: brightness(120%);\r\n    }\r\n\r\n    &:active{\r\n        outline: none;\r\n        box-shadow: inset 0px 2px 0px rgba(20, 70, 32, 0.2);\r\n    }\r\n`;","import mail from \"./mail.svg\";\r\nimport { ContactButton, Description, StyledHeader, HeaderTitle, Subheader } from \"./styled\";\r\n\r\nexport const Header = () => (\r\n    <StyledHeader>\r\n        <Subheader>\r\n            this is\r\n        </Subheader>\r\n        <HeaderTitle>\r\n            Paweł Suchy\r\n        </HeaderTitle>\r\n        <Description>\r\n            💻 I'm beginner frontend developer with small experience but with big heart to coding.<br />\r\n            👨‍💼 Now I'm looking for new job opportunities.\r\n        </Description>\r\n        <ContactButton\r\n            href=\"mailto:pawelsuchy166@gmail.com\"\r\n            rel=\"norefferer noopener\">\r\n            <img src={mail} alt=\"mail\" />\r\n            Hire me\r\n        </ContactButton>\r\n    </StyledHeader>\r\n);","import styled from \"styled-components\";\r\n\r\nexport const AuthorWrapper = styled.div`\r\n    display: grid;\r\n    grid-template-columns: auto 1fr;\r\n    grid-gap: 66px;\r\n\r\n    @media(max-width: 767px){\r\n        grid-template-columns: 1fr;\r\n        grid-gap: 12.67px;\r\n    };\r\n`\r\n\r\nexport const Image = styled.img`\r\n    width: 398px;\r\n    height: 398px;\r\n    border-radius: 50%;\r\n\r\n    @media(max-width: 767px){\r\n        width: 132.67px;\r\n        height: 132.67px;\r\n    }\r\n`;\r\n\r\n","import authorImage from \"./author.jpg\";\r\nimport { DarkModeSwitch } from \"./DarkModeSwitch\";\r\nimport { Header } from \"./Header\";\r\nimport { AuthorWrapper, Image } from \"./styled\";\r\n\r\nexport const Author = () => (\r\n    <AuthorWrapper>\r\n        <DarkModeSwitch />\r\n        <Image src={authorImage} alt=\"author\" />\r\n        <Header />\r\n    </AuthorWrapper>\r\n);","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    body{\r\n        background-color: ${({ theme }) => theme.color.whiteLilac};\r\n        font-family: 'Inter', sans-serif;\r\n        transition: 0.5s;\r\n\r\n        @media(max-width: 767px){\r\n            padding: 0;\r\n        }\r\n    }\r\n\r\n    html{\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    *, ::after, ::before{\r\n        box-sizing: inherit;\r\n    }\r\n    `;\r\n\r\nexport default GlobalStyle;","export const light = {\r\n    color: {\r\n        white: \"#FFFFFF\",\r\n        whiteLilac: \"#FBFBFE\",\r\n        mineShaft: \"#252525\",\r\n        slateGray: \"#6E7E91\",\r\n        scienceBlue: \"#0366D6\",\r\n        buttonTextColor: \"#FFFFFF\",\r\n        headerTextColor: \"#252525\",\r\n        headerUnderlineColor: \"#D1D4DB\",\r\n        listItemColor: \"#6E7E91\",\r\n        markerColor: \"#0366D6\",\r\n    },\r\n    breakpoint: {\r\n        mobileMax: \"767px\",\r\n    }\r\n};\r\n\r\nexport const dark = {\r\n    color: {\r\n        white: \"#252525\",\r\n        whiteLilac: \"#252525\",\r\n        mineShaft: \"#FFFFFF\",\r\n        slateGray: \"#FFFFFF\",\r\n        scienceBlue: \"#2188FF\",\r\n        buttonTextColor: \"#FFFFFF\",\r\n        headerTextColor: \"#FFFFFF\",\r\n        headerUnderlineColor: \"#D1D4DB\",\r\n        listItemColor: \"#FFFFFF\",\r\n        markerColor: \"#2188FF\",\r\n    },\r\n    breakpoint: {\r\n        mobileMax: \"767px\",\r\n    }\r\n};","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    position: relative;\r\n    padding: 16px;\r\n    max-width: 1216px;\r\n    width: 100%;\r\n    margin: 63px auto;\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoint.mobileMax})\r\n    {\r\n        margin: 32,67px auto;\r\n    }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const StyledSection = styled.section`\r\n    width: 100%;\r\n    padding: 32px;\r\n    background-color: ${({ theme }) => theme.color.white};\r\n    margin-top: 72px;\r\n    box-shadow: 0px -2px 50px rgba(9, 10, 51, 0.02), 0px 16px 58px rgba(9, 10, 51, 0.03);\r\n    border-radius: 4px;\r\n`;\r\n\r\nexport const SectionHeader = styled.h2`\r\n    font-size: 30px;\r\n    font-weight: 900;\r\n    letter-spacing: 0.05em;\r\n    padding-bottom: 13px;\r\n    color: ${({ theme }) => theme.color.headerTextColor};\r\n    border-bottom: 1px solid ${({ theme }) => theme.color.headerUnderlineColor};\r\n`;\r\n\r\nexport const SectionList = styled.ul`\r\n    padding-left: 0;\r\n    color: ${({ theme }) => theme.color.slateGray};\r\n    font-size: 18px;\r\n    columns: 3;\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoint.mobileMax}){\r\n        columns: 1;\r\n    }\r\n`;\r\n\r\nexport const SectionListItem = styled.li`\r\n    list-style-position: inside;\r\n    color: ${({ theme }) => theme.color.listItemColor};\r\n    margin-bottom: 8px;\r\n\r\n    &::marker{\r\n        width: 9px;\r\n        color: ${({ theme }) => theme.color.markerColor};\r\n    };\r\n`;","import { StyledSection, SectionHeader, SectionList, SectionListItem } from \"./styled\";\r\n\r\nexport const Section = ({ header, listContent }) => {\r\n    return (\r\n        <StyledSection>\r\n            <SectionHeader>\r\n                {header}\r\n            </SectionHeader>\r\n            <SectionList>\r\n                {listContent.map((listItem, id) =>\r\n                    <SectionListItem key={id}>\r\n                        {listItem}\r\n                    </SectionListItem>\r\n                )}\r\n            </SectionList>\r\n        </StyledSection>\r\n    );\r\n};","export const skillset = [\r\n    \"HTML\",\r\n    \"CSS BEM Convention\",\r\n    \"CSS Flexbox\",\r\n    \"CSS Grid\",\r\n    \"Markdown\",\r\n    \"Responsive Web Design\",\r\n    \"JavaScript with ES6+ features\",\r\n    \"React\",\r\n    \"Create-react-app\",\r\n    \"React-router\",\r\n    \"React-redux\",\r\n    \"Github\",\r\n    \"Styled components\",\r\n    \"Working with API (fetch)\",\r\n    \"Redux-saga\"\r\n];\r\n\r\nexport const toLearn = [\r\n    \"React-native\",\r\n    \"Angular\",\r\n    \"Python\",\r\n    \"Java\"\r\n];","import { ThemeProvider } from \"styled-components\";\nimport { Author } from \"./features/author\";\nimport GlobalStyle from \"./globalStyle\";\nimport { dark, light } from \"./theme\";\nimport { useSelector } from \"react-redux\";\nimport { selectDarkMode } from \"./themeSlice\";\nimport { Wrapper } from \"./common/Wrapper\";\nimport { Section } from \"./common/Section\";\nimport { skillset, toLearn } from \"./features/author/skillsAndToLearn\";\n\nfunction App() {\n  const darkMode = useSelector(selectDarkMode);\n  return (\n    <ThemeProvider theme={!darkMode ? light : dark}>\n      <GlobalStyle />\n      <Wrapper>\n        <Author />\n        <Section\n          header=\"My skillset includes 🛠️\"\n          listContent={skillset}\n        />\n        <Section\n          header=\"What I want to learn next 🚀\"\n          listContent={toLearn}\n        />\n      </Wrapper>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport themeReducer from \"./themeSlice\";\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        theme: themeReducer,\r\n    },\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}